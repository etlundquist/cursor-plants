version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000/api
      - NODE_ENV=development
      - WDS_SOCKET_HOST=localhost
      - WDS_SOCKET_PORT=3000
      - WATCHPACK_POLLING=true
      - FAST_REFRESH=false
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: npm start
    depends_on:
      - backend
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "8000:8000"
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/plant-care
      - JWT_SECRET=your-secret-key-here
      - PORT=8000
      - NODE_ENV=development
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: npm run dev
    depends_on:
      mongodb:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app-network

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    restart: unless-stopped
    command: mongod
    environment:
      - MONGODB_INITDB_ROOT_USERNAME=root
      - MONGODB_INITDB_ROOT_PASSWORD=example
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 1G
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mongodb_data: